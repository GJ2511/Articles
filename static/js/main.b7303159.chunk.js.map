{"version":3,"sources":["serviceWorker.js","services/historyService.js","services/constant.js","services/authService.js","ducks.js","container/SignUp/ducks.js","container/SignIn/ducks.js","services/tagService.js","container/FavTag/ducks.js","services/articleService.js","container/ArticleList/ducks.js","container/Article/ducks.js","services/commentService.js","container/Comment/ducks.js","sagas/index.js","reducers/index.js","store/index.js","component/NotFound.js","component/ErrorList.js","component/SignUp.js","container/SignUp/SignUpContainer.js","component/SignIn.js","container/SignIn/SignInContainer.js","component/Loader.js","component/ArticleList.js","component/Pagination.js","component/AddNewBtn.js","component/FavTag.js","container/FavTag/FavTagContainer.js","container/ArticleList/ArticleListContainer.js","component/ArticleForm.js","container/Article/helper.js","container/Article/CreateArticleContainer.js","container/Article/EditArticleContainer.js","component/Article.js","component/CommentList.js","component/CommentForm.js","container/Comment/CommentContainer.js","container/Article/ArticleContainer.js","Routes.js","component/Nav.js","container/Nav/NavContainer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","history","createBrowserHistory","historyService","forwardTo","push","API_URL","LOGIN_URL","USERS_URL","TAG_URL","ARTICLE_URL","headers","email","password","fetch","method","body","JSON","stringify","user","response","json","result","payload","localStorage","setItem","removeItem","parse","getItem","signIn","signOut","applicationSaga","SIGN_IN_SUCCESS","SIGN_OUT_REQUESTED","initialState","authenticated","authService","getLoggedInUser","currentUser","call","setSignInSuccess","type","takeLatest","applicationReducer","state","action","signUp","signUpSaga","SIGN_UP_REQUESTED","SIGN_UP_SUCCESS","SIGN_UP_FAILED","isSubmitting","error","signUpRequested","values","username","AuthService","errors","put","Error","signUpReducer","signInSaga","SIGN_IN_REQUESTED","SIGN_IN_FAILED","signInRequested","signInReducer","favTag","favTagSaga","loading","tags","selectedTag","FAV_TAG_REQUESTED","FAV_TAG_SUCCESS","FAV_TAG_ERROR","SET_SELECTED_TAG","favTagRequested","setSeletedTag","isSelected","val","TagService","favTagReducer","param","params","loggedInUser","url","requestHeaders","Authorization","token","article","slug","getArticles","toggleFavorite","articleListSaga","articles","currentPage","totalCount","myFavArticle","myArticle","GET_ARTICLES_LIST_REQUESTED","GET_ARTICLES_LIST_SUCCESS","GET_ARTICLES_LIST_ERROR","TOGGLE_FAVORITE","MARK_FAVORITE","UNMARK_FAVORITE","SET_CURRENT_PAGE","TOGGLE_MY_FAV_ARTICLE","TOGGLE_MY_ARTICLE","select","articleListReducer","resetPage","limit","offset","tag","author","favorited","ArticleService","resetPagination","service","Math","floor","articlesCount","map","favoritesCount","makeRequest","postArticle","updateArticle","getArticle","deleteArticle","articleSaga","successMsg","requesting","GET_ARTICLE_REQUESTED","GET_ARTICLE_SUCCESS","GET_ARTICLE_ERROR","UPDATE_ARTICLE_REQUESTED","CREATE_ARTICLE_REQUESTED","CREATE_ARTICLE_SUCCESS","CREATE_ARTICLE_ERROR","TOGGLE_FAVORITE_REQUESTED","TOGGLE_FAVORITE_SUCCESS","TOGGLE_FAVORITE_ERROR","DELETE_REQUESTED","RESET","getState","articleReducer","getArticleRequest","reset","update","text","delay","this","title","status","comment","commentId","getComments","deleteComment","addComment","commentSaga","comments","GET_COMMENTS_REQUESTED","GET_COMMENTS_SUCCESS","GET_COMMENTS_ERROR","ADD_COMMENT_REQUESTED","ADD_COMMENT_SUCCESS","DELETE_COMMENT_REQUESTED","CommentService","id","console","commentReducer","filter","commnet","rootSaga","all","rootReducer","combineReducers","router","connectRouter","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","routerMiddleware","store","createStore","run","configureStore","NotFound","className","to","ErrorList","role","Object","keys","item","i","key","parseErrorContent","SignUp","touched","hasError","length","noValidate","name","aria-describedby","placeholder","autoFocus","disabled","initialValues","SignUpContainer","handleValidation","test","trim","handleSubmit","props","validate","validateOnBlur","validateOnChange","onSubmit","Component","connect","SignIn","SignInContainer","Loader","ArticleList","handleRowClick","handleFavCellClick","tableBody","index","classes","cx","onClick","description","tagList","width","height","viewBox","fill","xmlns","fillRule","d","moment","createdAt","format","Pagination","handlePageClick","pages","Array","from","e","page","active","aria-label","AddNewBtn","FavTag","handleTagClick","selected","handleClick","FavTagContainer","rest","ArticleListContainer","onFavTagClick","getArticlesRequested","onFavCellClick","toggleFavoriteRequested","onRowClick","onPageClick","setCurrentPage","handleMyFavCheckboxChange","evt","toggleMyFavArticle","target","checked","handleMyArticleCheckboxChange","toggleMyArticle","onChange","htmlFor","ERROR","TagFormInput","useField","field","undefined","value","onKeyPress","charCode","keyCode","indexOf","setFieldValue","preventDefault","handleTagRemoved","ArticleForm","as","handleArticleFormValidation","CreateArticleContainer","createArticle","EditArticleContainer","updateArticleRequest","Article","handleDeleteClick","handleEditClick","handleMarkAsFavClick","owner","src","image","alt","favorites","count","getFavIcon","renderTags","CommentList","handleDeleteComment","showform","href","style","updatedAt","CommentForm","handleCommentSubmit","useState","setText","rows","CommentContainer","onDeleteComment","deleteCommentRequested","onCommentSubmit","addCommentRequested","getCommentsRequested","ArticleContainer","onMarkAsFavClick","onEditClick","onDeleteClick","deleteRequested","redirectToSign","withRouter","ProtectedRoute","component","render","PublicRoute","Routes","path","exact","Nav","isAuthenticated","signOutRequested","strict","data-toggle","data-target","aria-controls","aria-expanded","NavContainer","App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b7303159.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nfunction forwardTo(location) {\r\n    history.push(location);\r\n}\r\n\r\nconst historyService = {\r\n    forwardTo,\r\n    history,\r\n};\r\n\r\nexport default historyService;\r\n","export const API_URL = 'https://conduit.productionready.io/api/';\r\nexport const LOGIN_URL = `${API_URL}users/login`;\r\nexport const USERS_URL = `${API_URL}users`;\r\nexport const TAG_URL = `${API_URL}tags`;\r\nexport const ARTICLE_URL = `${API_URL}articles`;\r\n","import { LOGIN_URL, USERS_URL } from './constant';\r\nconst headers = {\r\n    'Content-Type': 'application/json;charset=utf-8',\r\n};\r\n\r\nclass AuthService {\r\n    async signin({ email, password }) {\r\n        const response = await fetch(LOGIN_URL, {\r\n            method: 'POST',\r\n            headers,\r\n            body: JSON.stringify({ user: { email, password } }),\r\n        });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n\r\n    async signup(payload) {\r\n        const response = await fetch(USERS_URL, {\r\n            method: 'POST',\r\n            headers,\r\n            body: JSON.stringify({ user: payload }),\r\n        });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n\r\n    setLoggedInUser(user) {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }\r\n\r\n    signout() {\r\n        localStorage.removeItem('user');\r\n    }\r\n\r\n    getLoggedInUser() {\r\n        return JSON.parse(localStorage.getItem('user'));\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { takeLatest, call } from 'redux-saga/effects';\r\n\r\nimport authService from './services/authService';\r\nimport historyService from './services/historyService';\r\n\r\nconst PREFIX = 'APPLICATION';\r\n\r\nconst SIGN_IN_SUCCESS = `${PREFIX}//SIGN_IN_SUCCESS`;\r\nconst SIGN_OUT_REQUESTED = `${PREFIX}//SIGN_OUT_REQUESTED`;\r\n\r\nexport const initialState = {\r\n    authenticated: authService.getLoggedInUser() === null ? false : true,\r\n    currentUser: authService.getLoggedInUser() === null ? {} : authService.getLoggedInUser(),\r\n};\r\n\r\nconst applicationReducer = (state = initialState, action = {}) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SIGN_IN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                authenticated: true,\r\n                currentUser: payload,\r\n            };\r\n        case SIGN_OUT_REQUESTED:\r\n            return {\r\n                ...state,\r\n                authenticated: false,\r\n                currentUser: {},\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nfunction* signIn({ payload }) {\r\n    yield call([authService, 'setLoggedInUser'], payload);\r\n    yield call([historyService, 'forwardTo'], '/');\r\n}\r\n\r\nfunction* signOut() {\r\n    yield call([authService, 'signout']);\r\n    yield call([historyService, 'forwardTo'], '/signin');\r\n}\r\n\r\nexport const signOutRequested = () => ({ type: SIGN_OUT_REQUESTED });\r\nexport const setSignInSuccess = (payload) => ({ type: SIGN_IN_SUCCESS, payload });\r\nexport const getIsAuthenticated = ({ application }) => application.authenticated;\r\n\r\nexport function* applicationSaga() {\r\n    yield takeLatest(SIGN_IN_SUCCESS, signIn);\r\n    yield takeLatest(SIGN_OUT_REQUESTED, signOut);\r\n}\r\n\r\nexport const actions = {\r\n    setSignInSuccess,\r\n};\r\n\r\nexport const selectors = {\r\n    getIsAuthenticated,\r\n};\r\n\r\nexport default applicationReducer;\r\n","import { takeLatest, put, call } from 'redux-saga/effects';\r\n\r\nimport AuthService from '../../services/authService';\r\nimport { setSignInSuccess } from '../../ducks';\r\n\r\nconst PREFIX = 'SIGN_UP';\r\nconst SIGN_UP_REQUESTED = `${PREFIX}//SIGN_UP_REQUESTED`;\r\nconst SIGN_UP_SUCCESS = `${PREFIX}//SIGN_UP_SUCCESS`;\r\nconst SIGN_UP_FAILED = `${PREFIX}//SIGN_UP_FAILED`;\r\n\r\nconst initialState = {\r\n    isSubmitting: false,\r\n    error: {},\r\n};\r\n\r\nconst signUpReducer = (state = initialState, action = {}) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SIGN_UP_REQUESTED:\r\n            return {\r\n                ...state,\r\n                isSubmitting: true,\r\n                error: {},\r\n            };\r\n        case SIGN_UP_FAILED:\r\n            return {\r\n                ...state,\r\n                isSubmitting: false,\r\n                error: payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const signUpRequested = (values) => ({\r\n    type: SIGN_UP_REQUESTED,\r\n    payload: values,\r\n});\r\n\r\nfunction* signUp({ payload: { username, email, password } }) {\r\n    try {\r\n        const response = yield call([AuthService, 'signup'], { username, email, password });\r\n\r\n        if (response.errors) {\r\n            yield put({ type: SIGN_UP_FAILED, payload: response.errors });\r\n        } else {\r\n            yield put({ type: SIGN_UP_SUCCESS });\r\n            yield put(setSignInSuccess(response.user));\r\n        }\r\n    } catch (error) {\r\n        yield put({\r\n            type: SIGN_UP_FAILED,\r\n            payload: {\r\n                Error: ['Something went wrong'],\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport function* signUpSaga() {\r\n    yield takeLatest(SIGN_UP_REQUESTED, signUp);\r\n}\r\n\r\nexport const actions = {\r\n    signUpRequested,\r\n};\r\n\r\nexport default signUpReducer;\r\n","import { takeLatest, put, call } from 'redux-saga/effects';\r\n\r\nimport AuthService from '../../services/authService';\r\nimport { setSignInSuccess } from '../../ducks';\r\n\r\nconst PREFIX = 'SIGN_IN';\r\nconst SIGN_IN_REQUESTED = `${PREFIX}//SIGN_IN_REQUESTED`;\r\nconst SIGN_IN_SUCCESS = `${PREFIX}//SIGN_IN_SUCCESS`;\r\nconst SIGN_IN_FAILED = `${PREFIX}//SIGN_IN_FAILED`;\r\n\r\nconst initialState = {\r\n    isSubmitting: false,\r\n    error: {},\r\n};\r\n\r\nconst signInReducer = (state = initialState, action = {}) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SIGN_IN_REQUESTED:\r\n            return {\r\n                ...state,\r\n                isSubmitting: true,\r\n                error: {},\r\n            };\r\n        case SIGN_IN_FAILED:\r\n            return {\r\n                ...state,\r\n                isSubmitting: false,\r\n                error: payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const signInRequested = (values) => ({\r\n    type: SIGN_IN_REQUESTED,\r\n    payload: values,\r\n});\r\n\r\nfunction* signIn({ payload: { email, password } }) {\r\n    try {\r\n        const response = yield call([AuthService, 'signin'], { email, password });\r\n\r\n        if (response.errors) {\r\n            yield put({ type: SIGN_IN_FAILED, payload: response.errors });\r\n        } else {\r\n            yield put({ type: SIGN_IN_SUCCESS });\r\n            yield put(setSignInSuccess(response.user));\r\n        }\r\n    } catch (error) {\r\n        yield put({\r\n            type: SIGN_IN_FAILED,\r\n            payload: {\r\n                Error: ['Something went wrong'],\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nexport function* signInSaga() {\r\n    yield takeLatest(SIGN_IN_REQUESTED, signIn);\r\n}\r\n\r\nexport const actions = {\r\n    signInRequested,\r\n};\r\n\r\nexport default signInReducer;\r\n","import { TAG_URL } from './constant';\r\nconst headers = {\r\n    'Content-Type': 'application/json;charset=utf-8',\r\n};\r\n\r\nclass TagService {\r\n    async getTags() {\r\n        const response = await fetch(TAG_URL, { headers });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default new TagService();\r\n","import { takeLatest, call, put } from 'redux-saga/effects';\r\n\r\nimport TagService from '../../services/tagService';\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    tags: [],\r\n    selectedTag: '',\r\n};\r\n\r\nconst PREFIX = 'FAV_TAG';\r\nconst FAV_TAG_REQUESTED = `${PREFIX}//FAV_TAG_REQUESTED`;\r\nconst FAV_TAG_SUCCESS = `${PREFIX}//FAV_TAG_SUCCESS`;\r\nconst FAV_TAG_ERROR = `${PREFIX}//FAV_TAG_ERROR`;\r\nconst SET_SELECTED_TAG = `${PREFIX}//SET_SELECTED_TAG`;\r\n\r\nconst favTagReducer = (state = initialState, action = {}) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case FAV_TAG_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                tags: payload,\r\n            };\r\n        case FAV_TAG_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                tags: [],\r\n            };\r\n        case SET_SELECTED_TAG:\r\n            return {\r\n                ...state,\r\n                selectedTag: payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const favTagRequested = () => ({ type: FAV_TAG_REQUESTED });\r\nexport const setSeletedTag = (isSelected, val) => ({ type: SET_SELECTED_TAG, payload: !isSelected ? val : '' });\r\nexport const getSeletedTag = (state) => state.favTagReducer.selectedTag;\r\n\r\nfunction* favTag() {\r\n    try {\r\n        const response = yield call([TagService, 'getTags']);\r\n\r\n        if (response.errors) {\r\n            yield put({ type: FAV_TAG_ERROR });\r\n        } else {\r\n            yield put({ type: FAV_TAG_SUCCESS, payload: response.tags });\r\n        }\r\n    } catch (error) {\r\n        yield put({ type: FAV_TAG_ERROR });\r\n    }\r\n}\r\n\r\nexport function* favTagSaga() {\r\n    yield takeLatest(FAV_TAG_REQUESTED, favTag);\r\n}\r\n\r\nexport const actions = {\r\n    favTagRequested,\r\n    setSeletedTag,\r\n};\r\n\r\nexport default favTagReducer;\r\n","import { ARTICLE_URL } from './constant';\r\nimport AuthService from './authService';\r\nconst headers = {\r\n    'Content-Type': 'application/json;charset=utf-8',\r\n};\r\n\r\nclass ArticleService {\r\n    async getArticles(params = {}) {\r\n        const loggedInUser = AuthService.getLoggedInUser();\r\n        let url = `${ARTICLE_URL}?`;\r\n\r\n        for (const param in params) {\r\n            url += `${param}=${params[param]}&`;\r\n        }\r\n\r\n        const requestHeaders = {\r\n            ...headers,\r\n            ...(loggedInUser && { Authorization: `Token ${loggedInUser.token}` }),\r\n        };\r\n\r\n        const response = await fetch(url, { headers: requestHeaders });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n\r\n    async createArticle(payload) {\r\n        const response = await fetch(ARTICLE_URL, {\r\n            method: 'POST',\r\n            headers: { ...headers, Authorization: `Token ${AuthService.getLoggedInUser().token}` },\r\n            body: JSON.stringify({ article: payload }),\r\n        });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n\r\n    async updateArticle({ values, slug }) {\r\n        let url = `${ARTICLE_URL}/${slug}`;\r\n\r\n        const response = await fetch(url, {\r\n            method: 'PUT',\r\n            headers: { ...headers, Authorization: `Token ${AuthService.getLoggedInUser().token}` },\r\n            body: JSON.stringify({ article: values }),\r\n        });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n\r\n    async getArticle(slug) {\r\n        let url = `${ARTICLE_URL}/${slug}`;\r\n\r\n        const response = await fetch(url, { headers });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n\r\n    async markArticleFav(slug) {\r\n        let url = `${ARTICLE_URL}/${slug}/favorite`;\r\n\r\n        const response = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { ...headers, Authorization: `Token ${AuthService.getLoggedInUser().token}` },\r\n        });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n\r\n    async unmarkArticleFav(slug) {\r\n        let url = `${ARTICLE_URL}/${slug}/favorite`;\r\n\r\n        const response = await fetch(url, {\r\n            method: 'DELETE',\r\n            headers: { ...headers, Authorization: `Token ${AuthService.getLoggedInUser().token}` },\r\n        });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n\r\n    async deleteArticle(slug) {\r\n        let url = `${ARTICLE_URL}/${slug}`;\r\n\r\n        const response = await fetch(url, {\r\n            method: 'DELETE',\r\n            headers: { ...headers, Authorization: `Token ${AuthService.getLoggedInUser().token}` },\r\n        });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default new ArticleService();\r\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\r\nimport map from 'lodash/map';\r\n\r\nimport ArticleService from '../../services/articleService';\r\nimport AuthService from '../../services/authService';\r\n\r\nconst initialState = {\r\n    loading: true,\r\n    articles: [],\r\n    currentPage: 1,\r\n    totalCount: 0,\r\n    error: false,\r\n    myFavArticle: false,\r\n    myArticle: false,\r\n};\r\n\r\nconst limit = 20;\r\n\r\nconst PREFIX = 'ARTICLES_LIST';\r\nconst GET_ARTICLES_LIST_REQUESTED = `${PREFIX}//GET_ARTICLES_LIST_REQUESTED`;\r\nconst GET_ARTICLES_LIST_SUCCESS = `${PREFIX}//GET_ARTICLES_LIST_SUCCESS`;\r\nconst GET_ARTICLES_LIST_ERROR = `${PREFIX}//GET_ARTICLES_LIST_ERROR`;\r\nconst TOGGLE_FAVORITE = `${PREFIX}//TOGGLE_FAVORITE`;\r\nconst MARK_FAVORITE = `${PREFIX}//MARK_FAVORITE`;\r\nconst UNMARK_FAVORITE = `${PREFIX}//UNMARK_FAVORITE`;\r\nconst SET_CURRENT_PAGE = `${PREFIX}//SET_CURRENT_PAGE`;\r\nconst TOGGLE_MY_FAV_ARTICLE = `${PREFIX}//TOGGLE_MY_FAV_ARTICLE`;\r\nconst TOGGLE_MY_ARTICLE = `${PREFIX}//TOGGLE_MY_ARTICLE`;\r\n\r\nconst articleListReducer = (state = initialState, action = {}) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_ARTICLES_LIST_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case GET_ARTICLES_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                articles: payload.articles,\r\n                totalCount: Math.floor(payload.articlesCount / limit),\r\n                ...(payload.resetPagination && { currentPage: 1 }),\r\n            };\r\n        case GET_ARTICLES_LIST_ERROR:\r\n            return {\r\n                ...state,\r\n                ...initialState,\r\n                error: true,\r\n            };\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: payload,\r\n            };\r\n        }\r\n        case UNMARK_FAVORITE: {\r\n            const { articles } = state;\r\n\r\n            return {\r\n                ...state,\r\n                articles: map(articles, (article) =>\r\n                    article.slug === payload\r\n                        ? { ...article, favorited: false, favoritesCount: article.favoritesCount - 1 }\r\n                        : article\r\n                ),\r\n            };\r\n        }\r\n        case MARK_FAVORITE: {\r\n            const { articles } = state;\r\n\r\n            return {\r\n                ...state,\r\n                articles: map(articles, (article) =>\r\n                    article.slug === payload\r\n                        ? { ...article, favorited: true, favoritesCount: article.favoritesCount + 1 }\r\n                        : article\r\n                ),\r\n            };\r\n        }\r\n        case TOGGLE_MY_FAV_ARTICLE: {\r\n            return {\r\n                ...state,\r\n                myFavArticle: payload,\r\n            };\r\n        }\r\n        case TOGGLE_MY_ARTICLE: {\r\n            return {\r\n                ...state,\r\n                myArticle: payload,\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getArticlesRequested = (resetPagination) => ({\r\n    type: GET_ARTICLES_LIST_REQUESTED,\r\n    payload: resetPagination,\r\n});\r\nexport const setCurrentPage = (page) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    payload: page,\r\n});\r\nexport const toggleFavoriteRequested = (payload) => ({\r\n    type: TOGGLE_FAVORITE,\r\n    payload,\r\n});\r\nexport const toggleMyFavArticle = (payload) => ({\r\n    type: TOGGLE_MY_FAV_ARTICLE,\r\n    payload,\r\n});\r\nexport const toggleMyArticle = (payload) => ({\r\n    type: TOGGLE_MY_ARTICLE,\r\n    payload,\r\n});\r\n\r\nexport const getState = (state) => state;\r\n\r\nfunction* getArticles({ payload }) {\r\n    try {\r\n        const loggedInUser = AuthService.getLoggedInUser();\r\n        const { articleListReducer, favTagReducer } = yield select();\r\n        const resetPage = payload && payload.resetPage ? true : false;\r\n\r\n        const params = {\r\n            limit,\r\n            offset: resetPage ? 0 : (articleListReducer.currentPage - 1) * limit,\r\n            ...(favTagReducer.selectedTag && { tag: favTagReducer.selectedTag }),\r\n            ...(articleListReducer.myArticle && loggedInUser !== null && { author: loggedInUser.username }),\r\n            ...(articleListReducer.myFavArticle && loggedInUser !== null && { favorited: loggedInUser.username }),\r\n        };\r\n\r\n        const response = yield call([ArticleService, 'getArticles'], params);\r\n\r\n        if (response.errors) {\r\n            yield put({ type: GET_ARTICLES_LIST_ERROR });\r\n        } else {\r\n            yield put({\r\n                type: GET_ARTICLES_LIST_SUCCESS,\r\n                payload: { ...response, ...(resetPage && { resetPagination: true }) },\r\n            });\r\n        }\r\n    } catch (error) {\r\n        yield put({ type: GET_ARTICLES_LIST_ERROR });\r\n    }\r\n}\r\n\r\nfunction* toggleFavorite({ payload: { slug, favorited } }) {\r\n    const service = favorited ? 'unmarkArticleFav' : 'markArticleFav';\r\n\r\n    try {\r\n        yield call([ArticleService, service], slug);\r\n\r\n        if (favorited) {\r\n            yield put({\r\n                type: UNMARK_FAVORITE,\r\n                payload: slug,\r\n            });\r\n        } else {\r\n            yield put({\r\n                type: MARK_FAVORITE,\r\n                payload: slug,\r\n            });\r\n        }\r\n    } catch (error) {\r\n        yield put({ type: GET_ARTICLES_LIST_ERROR });\r\n    }\r\n}\r\n\r\nexport function* articleListSaga() {\r\n    yield takeLatest(GET_ARTICLES_LIST_REQUESTED, getArticles);\r\n    yield takeLatest(TOGGLE_FAVORITE, toggleFavorite);\r\n}\r\n\r\nexport default articleListReducer;\r\n","import { takeLatest, call, put, delay, select } from 'redux-saga/effects';\r\n\r\nimport ArticleService from '../../services/articleService';\r\nimport historyService from '../../services/historyService';\r\n\r\nconst initialState = {\r\n    article: {},\r\n    error: {},\r\n    loading: false,\r\n    successMsg: '',\r\n    requesting: false,\r\n};\r\n\r\nconst PREFIX = 'ARTICLE';\r\nconst GET_ARTICLE_REQUESTED = `${PREFIX}//GET_ARTICLE_REQUESTED`;\r\nconst GET_ARTICLE_SUCCESS = `${PREFIX}//GET_ARTICLE_SUCCESS`;\r\nconst GET_ARTICLE_ERROR = `${PREFIX}//GET_ARTICLE_ERROR`;\r\nconst UPDATE_ARTICLE_REQUESTED = `${PREFIX}//UPDATE_ARTICLE_REQUESTED`;\r\nconst CREATE_ARTICLE_REQUESTED = `${PREFIX}//CREATE_ARTICLE_REQUESTED`;\r\nconst CREATE_ARTICLE_SUCCESS = `${PREFIX}//CREATE_ARTICLE_SUCCESS`;\r\nconst CREATE_ARTICLE_ERROR = `${PREFIX}//CREATE_ARTICLE_ERROR`;\r\nconst TOGGLE_FAVORITE_REQUESTED = `${PREFIX}//TOGGLE_FAVORITE_REQUESTED`;\r\nconst TOGGLE_FAVORITE_SUCCESS = `${PREFIX}//TOGGLE_FAVORITE_SUCCESS`;\r\nconst TOGGLE_FAVORITE_ERROR = `${PREFIX}//TOGGLE_FAVORITE_ERROR`;\r\nconst DELETE_REQUESTED = `${PREFIX}//DELETE_REQUESTED`;\r\nconst RESET = `${PREFIX}//RESET`;\r\n\r\nconst articleReducer = (state = initialState, action = {}) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_ARTICLE_REQUESTED:\r\n        case CREATE_ARTICLE_REQUESTED:\r\n        case UPDATE_ARTICLE_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case GET_ARTICLE_SUCCESS:\r\n        case CREATE_ARTICLE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: {},\r\n                ...payload,\r\n            };\r\n        case GET_ARTICLE_ERROR:\r\n        case CREATE_ARTICLE_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: payload,\r\n            };\r\n        case TOGGLE_FAVORITE_REQUESTED:\r\n        case DELETE_REQUESTED: {\r\n            return { ...state, requesting: true };\r\n        }\r\n        case TOGGLE_FAVORITE_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                article: {\r\n                    ...payload,\r\n                },\r\n                requesting: false,\r\n            };\r\n        }\r\n        case TOGGLE_FAVORITE_ERROR: {\r\n            return { ...state, requesting: false };\r\n        }\r\n        case RESET:\r\n            return {\r\n                ...state,\r\n                ...initialState,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getState = (state) => state && state.articleReducer;\r\nexport const getArticleRequest = (slug) => ({ type: GET_ARTICLE_REQUESTED, payload: slug });\r\nexport const createArticle = (values) => ({ type: CREATE_ARTICLE_REQUESTED, payload: values });\r\nexport const updateArticleRequest = (values, slug) => ({ type: UPDATE_ARTICLE_REQUESTED, payload: { values, slug } });\r\nexport const toggleFavoriteRequested = (payload) => ({\r\n    type: TOGGLE_FAVORITE_REQUESTED,\r\n    payload,\r\n});\r\nexport const deleteRequested = (payload) => ({\r\n    type: DELETE_REQUESTED,\r\n    payload,\r\n});\r\nexport const reset = () => ({ type: RESET });\r\n\r\nfunction* makeRequest(service, payload, update = false) {\r\n    const text = update ? 'Updated' : 'Created';\r\n\r\n    try {\r\n        const response = yield call([ArticleService, service], payload);\r\n\r\n        if (response.errors) {\r\n            yield put({ type: CREATE_ARTICLE_ERROR, payload: response.errors });\r\n        } else {\r\n            yield put({\r\n                type: CREATE_ARTICLE_SUCCESS,\r\n                payload: { successMsg: `Article ${text} Successfully. Redirecting to Article Detail page` },\r\n            });\r\n            yield delay(800);\r\n            yield call([historyService, 'forwardTo'], `/article/${response.article.slug}`);\r\n        }\r\n    } catch (error) {\r\n        yield put({\r\n            type: CREATE_ARTICLE_ERROR,\r\n            payload: {\r\n                Error: ['Something went wrong'],\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nfunction* postArticle({ payload }) {\r\n    yield call([this, makeRequest], 'createArticle', payload);\r\n}\r\n\r\nfunction* updateArticle({ payload: { values, slug } }) {\r\n    const state = yield select(getState);\r\n\r\n    if (state.article.title === values.title) {\r\n        delete values.title;\r\n    }\r\n\r\n    yield call([this, makeRequest], 'updateArticle', { values, slug }, true);\r\n}\r\n\r\nfunction* getArticle({ payload: slug }) {\r\n    try {\r\n        const response = yield call([ArticleService, 'getArticle'], slug);\r\n\r\n        if (response.status === '404') {\r\n            yield call([historyService, 'forwardTo'], `/404`);\r\n        } else if (response.errors) {\r\n            yield put({ type: GET_ARTICLE_ERROR, payload: response.errors });\r\n        } else {\r\n            yield put({\r\n                type: GET_ARTICLE_SUCCESS,\r\n                payload: response,\r\n            });\r\n        }\r\n    } catch (error) {\r\n        yield put({\r\n            type: GET_ARTICLE_ERROR,\r\n            payload: {\r\n                Error: ['Something went wrong'],\r\n            },\r\n        });\r\n    }\r\n}\r\n\r\nfunction* toggleFavorite({ payload: { slug, favorited } }) {\r\n    const service = favorited ? 'unmarkArticleFav' : 'markArticleFav';\r\n\r\n    try {\r\n        const response = yield call([ArticleService, service], slug);\r\n\r\n        yield put({\r\n            type: TOGGLE_FAVORITE_SUCCESS,\r\n            payload: response.article,\r\n        });\r\n    } catch (error) {\r\n        yield put({\r\n            type: TOGGLE_FAVORITE_ERROR,\r\n            payload: favorited,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* deleteArticle({ payload }) {\r\n    yield call([ArticleService, 'deleteArticle'], payload);\r\n    yield call([historyService, 'forwardTo'], `/`);\r\n}\r\n\r\nexport function* articleSaga() {\r\n    yield takeLatest(CREATE_ARTICLE_REQUESTED, postArticle);\r\n    yield takeLatest(UPDATE_ARTICLE_REQUESTED, updateArticle);\r\n    yield takeLatest(GET_ARTICLE_REQUESTED, getArticle);\r\n    yield takeLatest(TOGGLE_FAVORITE_REQUESTED, toggleFavorite);\r\n    yield takeLatest(DELETE_REQUESTED, deleteArticle);\r\n}\r\n\r\nexport default articleReducer;\r\n","import { ARTICLE_URL } from './constant';\r\nimport AuthService from './authService';\r\n\r\nconst headers = {\r\n    'Content-Type': 'application/json;charset=utf-8',\r\n};\r\n\r\nclass CommentService {\r\n    async getComments(slug) {\r\n        const loggedInUser = AuthService.getLoggedInUser();\r\n\r\n        const requestHeaders = {\r\n            ...headers,\r\n            ...(loggedInUser && { Authorization: `Token ${loggedInUser.token}` }),\r\n        };\r\n\r\n        const response = await fetch(`${ARTICLE_URL}/${slug}/comments`, { headers: requestHeaders });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n\r\n    async addComment({ slug, payload }) {\r\n        const response = await fetch(`${ARTICLE_URL}/${slug}/comments`, {\r\n            method: 'POST',\r\n            headers: { ...headers, Authorization: `Token ${AuthService.getLoggedInUser().token}` },\r\n            body: JSON.stringify({ comment: { body: payload } }),\r\n        });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n\r\n    async deleteComment({ slug, commentId }) {\r\n        const response = await fetch(`${ARTICLE_URL}/${slug}/comments/${commentId}`, {\r\n            method: 'DELETE',\r\n            headers: { ...headers, Authorization: `Token ${AuthService.getLoggedInUser().token}` },\r\n        });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default new CommentService();\r\n","import { takeLatest, call, put } from 'redux-saga/effects';\r\n\r\nimport CommentService from '../../services/commentService';\r\n\r\nconst initialState = {\r\n    comments: [],\r\n    loading: false,\r\n    requesting: false,\r\n};\r\n\r\nconst PREFIX = 'COMMENT';\r\nconst GET_COMMENTS_REQUESTED = `${PREFIX}//GET_COMMENTS_REQUESTED`;\r\nconst GET_COMMENTS_SUCCESS = `${PREFIX}//GET_COMMENTS_SUCCESS`;\r\nconst GET_COMMENTS_ERROR = `${PREFIX}//GET_COMMENTS_ERROR`;\r\nconst ADD_COMMENT_REQUESTED = `${PREFIX}//ADD_COMMENT_REQUESTED`;\r\nconst ADD_COMMENT_SUCCESS = `${PREFIX}//ADD_COMMENT_SUCCESS`;\r\nconst DELETE_COMMENT_REQUESTED = `${PREFIX}//DELETE_COMMENT_REQUESTED`;\r\nconst RESET = `${PREFIX}//RESET`;\r\n\r\nconst commentReducer = (state = initialState, action = {}) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case GET_COMMENTS_REQUESTED:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case GET_COMMENTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                comments: [...payload],\r\n            };\r\n        case GET_COMMENTS_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                comments: [],\r\n            };\r\n        case ADD_COMMENT_REQUESTED:\r\n            return {\r\n                ...state,\r\n                requesting: true,\r\n            };\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const { comments } = state;\r\n\r\n            return {\r\n                ...state,\r\n                requesting: false,\r\n                comments: [payload, ...comments],\r\n            };\r\n        }\r\n        case DELETE_COMMENT_REQUESTED: {\r\n            const { comments } = state;\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                comments: comments.filter((commnet) => {\r\n                    return commnet.id !== payload.comment.id;\r\n                }),\r\n            };\r\n        }\r\n        case RESET:\r\n            return {\r\n                ...state,\r\n                ...initialState,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getCommentsRequested = (slug) => ({ type: GET_COMMENTS_REQUESTED, payload: slug });\r\nexport const addCommentRequested = (payload) => ({ type: ADD_COMMENT_REQUESTED, payload });\r\nexport const deleteCommentRequested = (payload) => ({ type: DELETE_COMMENT_REQUESTED, payload });\r\nexport const reset = () => ({ type: RESET });\r\n\r\nfunction* getComments({ payload }) {\r\n    try {\r\n        const response = yield call([CommentService, 'getComments'], payload);\r\n\r\n        if (response.errors) {\r\n            yield put({ type: GET_COMMENTS_ERROR });\r\n        } else {\r\n            yield put({\r\n                type: GET_COMMENTS_SUCCESS,\r\n                payload: response.comments,\r\n            });\r\n        }\r\n    } catch (error) {\r\n        yield put({ type: GET_COMMENTS_ERROR });\r\n    }\r\n}\r\n\r\nfunction* deleteComment({ payload: { slug, comment } }) {\r\n    try {\r\n        yield call([CommentService, 'deleteComment'], { slug, commentId: comment.id });\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nfunction* addComment({ payload: { slug, comment } }) {\r\n    try {\r\n        const response = yield call([CommentService, 'addComment'], { slug, payload: comment });\r\n\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            payload: response.comment,\r\n        });\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport function* commentSaga() {\r\n    yield takeLatest(GET_COMMENTS_REQUESTED, getComments);\r\n    yield takeLatest(ADD_COMMENT_REQUESTED, addComment);\r\n    yield takeLatest(DELETE_COMMENT_REQUESTED, deleteComment);\r\n}\r\n\r\nexport default commentReducer;\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport { applicationSaga } from '../ducks';\r\nimport { signUpSaga } from '../container/SignUp/ducks';\r\nimport { signInSaga } from '../container/SignIn/ducks';\r\nimport { favTagSaga } from '../container/FavTag/ducks';\r\nimport { articleListSaga } from '../container/ArticleList/ducks';\r\nimport { articleSaga } from '../container/Article/ducks';\r\nimport { commentSaga } from '../container/Comment/ducks';\r\n\r\n// single entry point to start all Sagas at once\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        applicationSaga(),\r\n        signUpSaga(),\r\n        signInSaga(),\r\n        favTagSaga(),\r\n        articleListSaga(),\r\n        articleSaga(),\r\n        commentSaga(),\r\n    ]);\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport applicationReducer from '../ducks';\r\nimport signUpReducer from '../container/SignUp/ducks';\r\nimport signInReducer from '../container/SignIn/ducks';\r\nimport favTagReducer from '../container/FavTag/ducks';\r\nimport articleListReducer from '../container/ArticleList/ducks';\r\nimport articleReducer from '../container/Article/ducks';\r\nimport commentReducer from '../container/Comment/ducks';\r\n\r\nconst rootReducer = (history) =>\r\n    combineReducers({\r\n        router: connectRouter(history),\r\n        applicationReducer,\r\n        signUpReducer,\r\n        signInReducer,\r\n        favTagReducer,\r\n        articleListReducer,\r\n        articleReducer,\r\n        commentReducer,\r\n    });\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport historyService from '../services/historyService';\nimport rootSaga from '../sagas';\nimport rootReducer from '../reducers';\n\nconst devToolEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\nconst composeEnhancers = devToolEnhancer || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = [applyMiddleware(routerMiddleware(historyService.history), sagaMiddleware)];\n\nexport const configureStore = (initialState = {}) => {\n    const store = createStore(rootReducer(historyService.history), initialState, composeEnhancers(...enhancer));\n\n    sagaMiddleware.run(rootSaga);\n    return store;\n};\n\nconst store = configureStore();\n\nexport { store };\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row text-center mt-5\">\r\n                <div className=\"col-md-12\">\r\n                    <div className=\"error-template\">\r\n                        <h1>Oops!</h1>\r\n                        <h2>404 Not Found</h2>\r\n                        <div className=\"error-details\">Sorry, an error has occured, Requested page not found!</div>\r\n                        <div className=\"error-actions mt-2\">\r\n                            <Link to=\"/\" className=\"btn btn-primary btn-lg rounded-pill\">\r\n                                <span className=\"glyphicon glyphicon-home\"></span>\r\n                                Take Me Home{' '}\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst parseErrorContent = (errors) => {\r\n    return Object.keys(errors).map((item, i) => {\r\n        return (\r\n            <li key={i}>\r\n                <span>\r\n                    {item} {errors[item][0]}\r\n                </span>\r\n            </li>\r\n        );\r\n    });\r\n};\r\n\r\nfunction ErrorList({ errors }) {\r\n    return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n            <ul>{parseErrorContent(errors)}</ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nErrorList.propTypes = {\r\n    errors: PropTypes.object,\r\n};\r\n\r\nexport default ErrorList;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Form, Field } from 'formik';\n\nimport ErrorList from './ErrorList';\n\nfunction SignUp({ errors, touched, hasError, isSubmitting }) {\n    return (\n        <div className=\"row\">\n            <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n                <div className=\"card card-signUp my-5 bg-light \">\n                    <div className=\"card-header\">\n                        <h5 className=\"card-title text-center\">Sign Up</h5>\n                    </div>\n                    <div className=\"card-body\">\n                        {Object.keys(hasError).length > 0 && <ErrorList errors={hasError} />}\n                        <Form noValidate>\n                            <div className=\"form-group\">\n                                <Field\n                                    type=\"text\"\n                                    className=\"form-control rounded-pill\"\n                                    id=\"username\"\n                                    name=\"username\"\n                                    aria-describedby=\"usernameHelp\"\n                                    placeholder=\"User Name\"\n                                    autoFocus\n                                />\n                                {errors.username && touched.username && (\n                                    <small className=\"form-text text-danger\">{errors.username}</small>\n                                )}\n                            </div>\n                            <div className=\"form-group\">\n                                <Field\n                                    type=\"email\"\n                                    className=\"form-control rounded-pill\"\n                                    id=\"email\"\n                                    name=\"email\"\n                                    placeholder=\"Email address\"\n                                />\n                                {errors.email && touched.email && (\n                                    <small className=\"form-text text-danger\">{errors.email}</small>\n                                )}\n                            </div>\n                            <div className=\"form-group\">\n                                <Field\n                                    type=\"password\"\n                                    className=\"form-control rounded-pill\"\n                                    id=\"password\"\n                                    name=\"password\"\n                                    placeholder=\"Password \"\n                                />\n                                {errors.password && touched.password && (\n                                    <small className=\"form-text text-danger\">{errors.password}</small>\n                                )}\n                            </div>\n                            <button\n                                type=\"submit\"\n                                className=\"btn btn-primary btn-lg btn-block rounded-pill\"\n                                disabled={isSubmitting}\n                            >\n                                Sign Me Up\n                            </button>\n                        </Form>\n                    </div>\n                    <div className=\"card-footer\">\n                        Already have an account? <Link to=\"/signin\"> Sign In</Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nSignUp.propTypes = {\n    errors: PropTypes.object,\n    hasError: PropTypes.object.isRequired,\n    isSubmitting: PropTypes.bool.isRequired,\n    touched: PropTypes.object,\n};\n\nexport default SignUp;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Formik } from 'formik';\r\n\r\nimport SignUp from '../../component/SignUp';\r\nimport { signUpRequested } from './ducks';\r\n\r\nconst initialValues = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n};\r\n\r\nclass SignUpContainer extends Component {\r\n    handleValidation = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.email) {\r\n            errors.email = 'Required';\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n        }\r\n\r\n        if (!values.username) {\r\n            errors.username = 'Required';\r\n        }\r\n\r\n        if (!values.password) {\r\n            errors.password = 'Required';\r\n        } else if (values.password.length > 20 || values.password.trim().length < 8) {\r\n            errors.password = 'Password must contain characters between 8 - 20';\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    handleSubmit = (values) => {\r\n        this.props.signUpRequested(values);\r\n    };\r\n\r\n    render() {\r\n        const { error, isSubmitting } = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={initialValues}\r\n                // eslint-disable-next-line react/jsx-handler-names\r\n                validate={this.handleValidation}\r\n                validateOnBlur={false}\r\n                validateOnChange={false}\r\n                onSubmit={this.handleSubmit}\r\n            >\r\n                {(props) => <SignUp {...props} isSubmitting={isSubmitting} hasError={error} />}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nSignUpContainer.propTypes = {\r\n    error: PropTypes.object.isRequired,\r\n    isSubmitting: PropTypes.bool.isRequired,\r\n    signUpRequested: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ signUpReducer }) => ({\r\n    error: signUpReducer.error,\r\n    isSubmitting: signUpReducer.isSubmitting,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signUpRequested })(SignUpContainer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Field } from 'formik';\r\n\r\nimport ErrorList from './ErrorList';\r\n\r\nfunction SignIn({ errors, touched, hasError, isSubmitting }) {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                <div className=\"card card-signin my-5 bg-light \">\r\n                    <div className=\"card-header\">\r\n                        <h5 className=\"card-title text-center\">Sign In</h5>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        {Object.keys(hasError).length > 0 && <ErrorList errors={hasError} />}\r\n                        <Form noValidate>\r\n                            <div className=\"form-group\">\r\n                                <Field\r\n                                    type=\"email\"\r\n                                    className=\"form-control rounded-pill\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Email address\"\r\n                                    autoFocus\r\n                                />\r\n                                {errors.email && touched.email && (\r\n                                    <small className=\"form-text text-danger\">{errors.email}</small>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <Field\r\n                                    type=\"password\"\r\n                                    className=\"form-control rounded-pill\"\r\n                                    id=\"password\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Password \"\r\n                                />\r\n                                {errors.password && touched.password && (\r\n                                    <small className=\"form-text text-danger\">{errors.password}</small>\r\n                                )}\r\n                            </div>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-primary btn-lg btn-block rounded-pill\"\r\n                                disabled={isSubmitting}\r\n                            >\r\n                                Login\r\n                            </button>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                        Do not have an account? <Link to=\"/signup\"> Sign Up</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nSignIn.propTypes = {\r\n    errors: PropTypes.object,\r\n    hasError: PropTypes.object.isRequired,\r\n    isSubmitting: PropTypes.bool.isRequired,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Formik } from 'formik';\r\n\r\nimport SignIn from '../../component/SignIn';\r\nimport { signInRequested } from './ducks';\r\n\r\nconst initialValues = {\r\n    email: '',\r\n    password: '',\r\n};\r\n\r\nclass SignInContainer extends Component {\r\n    handleValidation = (values) => {\r\n        const errors = {};\r\n\r\n        if (!values.email) {\r\n            errors.email = 'Required';\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n            errors.email = 'Invalid email address';\r\n        }\r\n\r\n        if (!values.password) {\r\n            errors.password = 'Required';\r\n        } else if (values.password.length > 20 || values.password.trim().length < 8) {\r\n            errors.password = 'Password must contain characters between 8 - 20';\r\n        }\r\n\r\n        return errors;\r\n    };\r\n\r\n    handleSubmit = (values) => {\r\n        this.props.signInRequested(values);\r\n    };\r\n\r\n    render() {\r\n        const { error, isSubmitting } = this.props;\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={initialValues}\r\n                // eslint-disable-next-line react/jsx-handler-names\r\n                validate={this.handleValidation}\r\n                validateOnBlur={false}\r\n                validateOnChange={false}\r\n                onSubmit={this.handleSubmit}\r\n            >\r\n                {(props) => <SignIn {...props} isSubmitting={isSubmitting} hasError={error} />}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nSignInContainer.propTypes = {\r\n    error: PropTypes.object.isRequired,\r\n    isSubmitting: PropTypes.bool.isRequired,\r\n    signInRequested: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ signInReducer }) => ({\r\n    error: signInReducer.error,\r\n    isSubmitting: signInReducer.isSubmitting,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signInRequested })(SignInContainer);\r\n","import React from 'react';\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport cx from 'classnames';\r\n\r\nimport Loader from './Loader';\r\n\r\nfunction ArticleList({ articles, loading, handleRowClick, handleFavCellClick }) {\r\n    if (loading) {\r\n        return <Loader />;\r\n    }\r\n\r\n    const getTags = (tags) => {\r\n        return tags.map((tag, index) => {\r\n            return (\r\n                <span className=\"badge ml-1 badge-info\" key={index}>\r\n                    {tag}\r\n                </span>\r\n            );\r\n        });\r\n    };\r\n\r\n    const getFavIcon = (favorites) => {\r\n        if (favorites) {\r\n            return (\r\n                <svg\r\n                    className=\"bi bi-heart-fill\"\r\n                    width=\"1em\"\r\n                    height=\"1em\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        fillRule=\"evenodd\"\r\n                        d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\r\n                    />\r\n                </svg>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <svg\r\n                className=\"bi bi-heart\"\r\n                width=\"1em\"\r\n                height=\"1em\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"currentColor\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n                <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"\r\n                />\r\n            </svg>\r\n        );\r\n    };\r\n\r\n    const tableBody = articles.map((article, index) => {\r\n        const classes = cx('btn rounded-pill text-white', {\r\n            'badge-secondary': !article.favorited,\r\n            'badge-primary': article.favorited,\r\n        });\r\n\r\n        return (\r\n            <tr key={index} className=\"d-flex hover-hand\">\r\n                <td className=\"col-2\" onClick={() => handleRowClick(article.slug)}>\r\n                    {article.title}\r\n                </td>\r\n                <td className=\"col-3\" onClick={() => handleRowClick(article.slug)}>\r\n                    {article.description}\r\n                </td>\r\n                <td className=\"col-2\" onClick={() => handleRowClick(article.slug)}>\r\n                    {article.author.username}\r\n                </td>\r\n                <td className=\"col-2\" onClick={() => handleRowClick(article.slug)}>\r\n                    {getTags(article.tagList)}\r\n                </td>\r\n                <td className=\"col-1\" onClick={() => handleFavCellClick(article)}>\r\n                    <button type=\"button\" className={classes}>\r\n                        {getFavIcon(article.favorited)}{' '}\r\n                        <span className=\"badge badge-light\">{article.favoritesCount}</span>\r\n                    </button>\r\n                </td>\r\n                <td className=\"col-2\" onClick={() => handleRowClick(article.slug)}>\r\n                    {moment(article.createdAt).format('dddd, MMMM Do YYYY')}\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <table className=\"table table-hover table-bordered article_list\">\r\n            <thead className=\"thead-dark\">\r\n                <tr className=\"d-flex\">\r\n                    <th className=\"col-2\">Title</th>\r\n                    <th className=\"col-3\">Description</th>\r\n                    <th className=\"col-2\">Author</th>\r\n                    <th className=\"col-2\">Tags</th>\r\n                    <th className=\"col-1\">Favorite Count</th>\r\n                    <th className=\"col-2\">Created At</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{tableBody}</tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nArticleList.propTypes = {\r\n    articles: PropTypes.array.isRequired,\r\n    handleFavCellClick: PropTypes.func.isRequired,\r\n    handleRowClick: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ArticleList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\n\r\nfunction Pagination({ totalCount, currentPage, loading, handlePageClick }) {\r\n    const pages = Array.from(Array(totalCount)).map((e, index) => {\r\n        const page = index + 1;\r\n        const active = currentPage === page;\r\n        const classes = cx('page-item', {\r\n            active: active,\r\n            'hover-hand': !active,\r\n        });\r\n\r\n        if (loading) {\r\n            return '';\r\n        }\r\n        return (\r\n            <li className={classes} key={index} onClick={() => !active && handlePageClick(page)}>\r\n                <p className=\"page-link\">{page}</p>\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <nav aria-label=\"Page navigation\" className=\"table-responsive\">\r\n            <ul className=\"pagination\">{pages}</ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nPagination.propTypes = {\r\n    currentPage: PropTypes.number.isRequired,\r\n    handlePageClick: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    totalCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction AddNewBtn() {\r\n    return (\r\n        <Link to=\"/new/article\" className=\"btn btn-primary rounded-pill mb-2\">\r\n            + Add New Article\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default AddNewBtn;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport cx from 'classnames';\r\n\r\nfunction FavTag({ handleTagClick, selectedTag, tags, setSeletedTag }) {\r\n    const handleClick = (selected, tag) => {\r\n        setSeletedTag(selected, tag);\r\n        handleTagClick();\r\n    };\r\n\r\n    return tags.map((tag, index) => {\r\n        const selected = tag === selectedTag ? true : false;\r\n        const classes = cx('badge ml-1 hover-hand', {\r\n            'badge-secondary': !selected,\r\n            'badge-primary': selected,\r\n        });\r\n\r\n        return (\r\n            <span className={classes} key={index} onClick={() => handleClick(selected, tag)}>\r\n                {tag}\r\n            </span>\r\n        );\r\n    });\r\n}\r\n\r\nFavTag.propTypes = {\r\n    handleTagClick: PropTypes.func.isRequired,\r\n    selectedTag: PropTypes.string,\r\n    tags: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FavTag;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Loader from '../../component/Loader';\r\nimport FavTag from '../../component/FavTag';\r\nimport { favTagRequested, setSeletedTag } from './ducks';\r\n\r\nclass FavTagContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.favTagRequested();\r\n    }\r\n\r\n    render() {\r\n        const { loading, ...rest } = this.props;\r\n\r\n        return (\r\n            <div className=\"card card-signin bg-light\">\r\n                <div className=\"card-header\">\r\n                    <h5 className=\"card-title text-center\">Popular Tags</h5>\r\n                </div>\r\n                <div className=\"card-body bg-white\">{loading ? <Loader /> : <FavTag {...rest} />}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFavTagContainer.propTypes = {\r\n    favTagRequested: PropTypes.func.isRequired,\r\n    handleTagClick: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    selectedTag: PropTypes.string,\r\n    setSeletedTag: PropTypes.func.isRequired,\r\n    tags: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ favTagReducer }) => ({\r\n    tags: favTagReducer.tags,\r\n    loading: favTagReducer.loading,\r\n    selectedTag: favTagReducer.selectedTag,\r\n});\r\n\r\nexport default connect(mapStateToProps, { favTagRequested, setSeletedTag })(FavTagContainer);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ArtileList from '../../component/ArticleList';\r\nimport ErrorList from '../../component/ErrorList';\r\nimport Pagination from '../../component/Pagination';\r\nimport AddNewBtn from '../../component/AddNewBtn';\r\nimport FavTagContainer from '../FavTag/FavTagContainer';\r\nimport {\r\n    getArticlesRequested,\r\n    setCurrentPage,\r\n    toggleFavoriteRequested,\r\n    toggleMyFavArticle,\r\n    toggleMyArticle,\r\n} from './ducks';\r\n\r\nimport historyService from '../../services/historyService';\r\n\r\nclass ArticleListContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.getArticlesRequested();\r\n    }\r\n\r\n    onFavTagClick = () => {\r\n        this.props.getArticlesRequested({ resetPage: true });\r\n    };\r\n\r\n    onFavCellClick = ({ slug, favorited }) => {\r\n        const { authenticated, toggleFavoriteRequested } = this.props;\r\n\r\n        if (!authenticated) {\r\n            historyService.forwardTo(`/signin`);\r\n        } else {\r\n            toggleFavoriteRequested({ slug, favorited });\r\n        }\r\n    };\r\n\r\n    onRowClick = (slug) => {\r\n        historyService.forwardTo(`/article/${slug}`);\r\n    };\r\n\r\n    onPageClick = (page) => {\r\n        this.props.setCurrentPage(page);\r\n        this.props.getArticlesRequested();\r\n    };\r\n\r\n    handleMyFavCheckboxChange = (evt) => {\r\n        this.props.toggleMyFavArticle(evt.target.checked);\r\n        this.props.getArticlesRequested();\r\n    };\r\n\r\n    handleMyArticleCheckboxChange = (evt) => {\r\n        this.props.toggleMyArticle(evt.target.checked);\r\n        this.props.getArticlesRequested();\r\n    };\r\n\r\n    render() {\r\n        const { error, totalCount, currentPage, loading, authenticated, myArticle, myFavArticle, ...rest } = this.props;\r\n\r\n        return (\r\n            <div className=\"mt-5 container container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12 col-md-3 col-lg-2 col-xl-2\">\r\n                        <AddNewBtn />\r\n                        <FavTagContainer handleTagClick={this.onFavTagClick} />\r\n                        {authenticated && (\r\n                            <>\r\n                                <div className=\"form-check mt-1 mb-1\">\r\n                                    <input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"checkbox\"\r\n                                        checked={myFavArticle}\r\n                                        onChange={(e) => this.handleMyFavCheckboxChange(e)}\r\n                                    />\r\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                                        My Favorite Article\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"form-check mt-1 mb-1\">\r\n                                    <input\r\n                                        className=\"form-check-input\"\r\n                                        type=\"checkbox\"\r\n                                        checked={myArticle}\r\n                                        onChange={(e) => this.handleMyArticleCheckboxChange(e)}\r\n                                    />\r\n                                    <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\r\n                                        My Article\r\n                                    </label>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"col-sm-12 col-md-9 col-lg-10 col-xl-10\">\r\n                        {error ? (\r\n                            <ErrorList errors={{ ERROR: ['Something Went Wrong'] }} />\r\n                        ) : (\r\n                            <>\r\n                                <ArtileList\r\n                                    {...rest}\r\n                                    handleRowClick={this.onRowClick}\r\n                                    loading={loading}\r\n                                    handleFavCellClick={this.onFavCellClick}\r\n                                />\r\n                                <Pagination\r\n                                    totalCount={totalCount}\r\n                                    currentPage={currentPage}\r\n                                    loading={loading}\r\n                                    handlePageClick={this.onPageClick}\r\n                                />\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nArticleListContainer.propTypes = {\r\n    articles: PropTypes.array.isRequired,\r\n    authenticated: PropTypes.bool.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    error: PropTypes.bool.isRequired,\r\n    getArticlesRequested: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    myArticle: PropTypes.bool.isRequired,\r\n    myFavArticle: PropTypes.bool.isRequired,\r\n    setCurrentPage: PropTypes.func.isRequired,\r\n    toggleFavoriteRequested: PropTypes.func.isRequired,\r\n    toggleMyArticle: PropTypes.func.isRequired,\r\n    toggleMyFavArticle: PropTypes.func.isRequired,\r\n    totalCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ articleListReducer, applicationReducer }) => ({\r\n    articles: articleListReducer.articles,\r\n    authenticated: applicationReducer.authenticated,\r\n    currentPage: articleListReducer.currentPage,\r\n    error: articleListReducer.error,\r\n    loading: articleListReducer.loading,\r\n    myArticle: articleListReducer.myArticle,\r\n    myFavArticle: articleListReducer.myFavArticle,\r\n    totalCount: articleListReducer.totalCount,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getArticlesRequested,\r\n    setCurrentPage,\r\n    toggleFavoriteRequested,\r\n    toggleMyFavArticle,\r\n    toggleMyArticle,\r\n})(ArticleListContainer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Field, useField } from 'formik';\r\n\r\nimport ErrorList from './ErrorList';\r\n\r\nfunction TagFormInput(props) {\r\n    const [field] = useField(props);\r\n\r\n    if (field.value.tagList === undefined) {\r\n        return null;\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        const value = e.target.value.trim();\r\n\r\n        if ((e.charCode === 13 || e.keyCode === 13) && value.length) {\r\n            if (field.value.tagList.indexOf(value) === -1) {\r\n                props.setFieldValue('tagList', [...field.value.tagList, value]);\r\n                e.target.value = '';\r\n            }\r\n            e.preventDefault();\r\n        }\r\n    };\r\n\r\n    const handleTagRemoved = (val) => {\r\n        props.setFieldValue(\r\n            'tagList',\r\n            field.value.tagList.filter((tag) => tag !== val)\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control rounded-pill\"\r\n                placeholder=\"Enter tags\"\r\n                onKeyPress={handleKeyPress}\r\n                name=\"tag\"\r\n            />\r\n            <div className=\"row mt-1\">\r\n                <div className=\"col-md-12\">\r\n                    {field.value.tagList.map((val, index) => {\r\n                        return (\r\n                            <span className=\"badge badge-info ml-1\" key={index} onClick={() => handleTagRemoved(val)}>\r\n                                <svg\r\n                                    className=\"bi bi-x hover-hand\"\r\n                                    width=\"1em\"\r\n                                    height=\"1em\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                    fill=\"currentColor\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <path\r\n                                        fillRule=\"evenodd\"\r\n                                        d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"\r\n                                    />\r\n                                    <path\r\n                                        fillRule=\"evenodd\"\r\n                                        d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"\r\n                                    />\r\n                                </svg>\r\n                                {val}\r\n                            </span>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nTagFormInput.propTypes = {\r\n    setFieldValue: PropTypes.func,\r\n};\r\n\r\nfunction ArticleForm({ errors, touched, hasError, isSubmitting, ...rest }) {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-12 col-lg-12 mx-auto mt-5\">\r\n                {Object.keys(hasError).length > 0 && <ErrorList errors={hasError} />}\r\n                <Form noValidate>\r\n                    <div className=\"form-group\">\r\n                        <Field\r\n                            type=\"text\"\r\n                            className=\"form-control rounded-pill\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            placeholder=\"Article Title\"\r\n                            autoFocus\r\n                        />\r\n                        {errors.title && touched.title && (\r\n                            <small className=\"form-text text-danger\">{errors.title}</small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <Field\r\n                            type=\"text\"\r\n                            className=\"form-control rounded-pill\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            placeholder=\"What's this article about\"\r\n                            autoFocus\r\n                        />\r\n                        {errors.description && touched.description && (\r\n                            <small className=\"form-text text-danger\">{errors.description}</small>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <Field\r\n                            as=\"textarea\"\r\n                            className=\"form-control rounded-pill\"\r\n                            id=\"body\"\r\n                            name=\"body\"\r\n                            placeholder=\"What's this article about\"\r\n                            autoFocus\r\n                        />\r\n                        {errors.body && touched.body && <small className=\"form-text text-danger\">{errors.body}</small>}\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <TagFormInput {...rest} />\r\n                    </div>\r\n                    <div className=\"form-group offset-md-9\">\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-primary btn-lg btn-block rounded-pill \"\r\n                            disabled={isSubmitting}\r\n                        >\r\n                            Publish Article\r\n                        </button>\r\n                    </div>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nArticleForm.propTypes = {\r\n    errors: PropTypes.object,\r\n    hasError: PropTypes.object,\r\n    isSubmitting: PropTypes.bool,\r\n    touched: PropTypes.object,\r\n};\r\n\r\nexport default ArticleForm;\r\n","export const handleArticleFormValidation = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.title) {\r\n        errors.title = 'Required';\r\n    }\r\n\r\n    if (!values.description) {\r\n        errors.description = 'Required';\r\n    }\r\n\r\n    if (!values.body) {\r\n        errors.body = 'Required';\r\n    }\r\n\r\n    return errors;\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ArticleForm from '../../component/ArticleForm';\r\nimport Loader from '../../component/Loader';\r\nimport { handleArticleFormValidation } from './helper.js';\r\nimport { createArticle, reset } from './ducks';\r\n\r\nconst initialValues = {\r\n    title: '',\r\n    description: '',\r\n    body: '',\r\n    tagList: [],\r\n};\r\n\r\nclass CreateArticleContainer extends Component {\r\n    handleSubmit = (values) => {\r\n        this.props.createArticle(values);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        const { error, loading, successMsg } = this.props;\r\n\r\n        if (loading) {\r\n            return (\r\n                <div className=\"mt-5\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (successMsg.length) {\r\n            return (\r\n                <div className=\"alert alert-primary mt-5\" role=\"alert\">\r\n                    {successMsg}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"container container-fluid\">\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    // eslint-disable-next-line react/jsx-handler-names\r\n                    validate={handleArticleFormValidation}\r\n                    validateOnBlur={false}\r\n                    validateOnChange={false}\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    {(props) => <ArticleForm {...props} hasError={error} />}\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreateArticleContainer.propTypes = {\r\n    createArticle: PropTypes.func.isRequired,\r\n    error: PropTypes.object.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    reset: PropTypes.func.isRequired,\r\n    successMsg: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ articleReducer }) => ({\r\n    error: articleReducer.error,\r\n    loading: articleReducer.loading,\r\n    successMsg: articleReducer.successMsg,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createArticle, reset })(CreateArticleContainer);\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ArticleForm from '../../component/ArticleForm';\r\nimport Loader from '../../component/Loader';\r\nimport { handleArticleFormValidation } from './helper.js';\r\nimport { updateArticleRequest, reset, getArticleRequest } from './ducks';\r\n\r\nclass EditArticleContainer extends Component {\r\n    componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: { slug },\r\n            },\r\n            getArticleRequest,\r\n        } = this.props;\r\n\r\n        getArticleRequest(slug);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    handleSubmit = ({ body, description, title, tagList }) => {\r\n        const {\r\n            match: {\r\n                params: { slug },\r\n            },\r\n            updateArticleRequest,\r\n        } = this.props;\r\n\r\n        updateArticleRequest({ body, description, title, tagList }, slug);\r\n    };\r\n\r\n    render() {\r\n        const { article, error, loading, successMsg } = this.props;\r\n\r\n        if (loading) {\r\n            return (\r\n                <div className=\"mt-5\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (successMsg.length) {\r\n            return (\r\n                <div className=\"alert alert-primary mt-5\" role=\"alert\">\r\n                    {successMsg}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"container container-fluid\">\r\n                <Formik\r\n                    initialValues={article}\r\n                    // eslint-disable-next-line react/jsx-handler-names\r\n                    validate={handleArticleFormValidation}\r\n                    validateOnBlur={true}\r\n                    validateOnChange={true}\r\n                    onSubmit={this.handleSubmit}\r\n                >\r\n                    {(props) => <ArticleForm {...props} isSubmitting={loading} hasError={error} />}\r\n                </Formik>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEditArticleContainer.propTypes = {\r\n    article: PropTypes.object.isRequired,\r\n    error: PropTypes.object.isRequired,\r\n    getArticleRequest: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    reset: PropTypes.func.isRequired,\r\n    successMsg: PropTypes.string.isRequired,\r\n    updateArticleRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ articleReducer }) => ({\r\n    article: articleReducer.article,\r\n    error: articleReducer.error,\r\n    loading: articleReducer.loading,\r\n    successMsg: articleReducer.successMsg,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateArticleRequest, reset, getArticleRequest })(EditArticleContainer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport cx from 'classnames';\r\n\r\nimport './Article.css';\r\n\r\nconst getFavIcon = (favorites, count, handleClick, requesting) => {\r\n    const classes = cx('btn rounded-pill text-white mr-1', {\r\n        'badge-info': !favorites,\r\n        'badge-success': favorites,\r\n    });\r\n\r\n    if (favorites) {\r\n        return (\r\n            <button className={classes} onClick={() => handleClick(favorites)} disabled={requesting}>\r\n                <svg\r\n                    className=\"bi bi-heart-fill\"\r\n                    width=\"1em\"\r\n                    height=\"1em\"\r\n                    viewBox=\"0 0 16 16\"\r\n                    fill=\"currentColor\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        fillRule=\"evenodd\"\r\n                        d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\r\n                    />\r\n                </svg>{' '}\r\n                Favorite Article ({count})\r\n            </button>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <button className={classes} onClick={() => handleClick(favorites)} disabled={requesting}>\r\n            <svg\r\n                className=\"bi bi-heart\"\r\n                width=\"1em\"\r\n                height=\"1em\"\r\n                viewBox=\"0 0 16 16\"\r\n                fill=\"currentColor\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n                <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M8 2.748l-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z\"\r\n                />\r\n            </svg>{' '}\r\n            Favorite Article ({count})\r\n        </button>\r\n    );\r\n};\r\n\r\nfunction Article({ article, handleDeleteClick, handleEditClick, handleMarkAsFavClick, owner, requesting }) {\r\n    const renderTags = (tags = []) => {\r\n        return tags.map((tag, index) => {\r\n            return (\r\n                <span className=\"badge badge-pill badge-info mr-1\" key={index}>\r\n                    {tag}\r\n                </span>\r\n            );\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bg-dark text-white p-2\">\r\n                <h2 className=\"mb-3 px-2\">{article.title}</h2>\r\n                <div className=\"row px-2\">\r\n                    <div className=\"col-md-7 profile\">\r\n                        <ul className=\"list-unstyled\">\r\n                            <li className=\"media\">\r\n                                <img\r\n                                    src={article.author?.image}\r\n                                    className=\"img-thumbnail img-fluid rounded-pill profile-img mr-3\"\r\n                                    alt={article.author?.username}\r\n                                />\r\n                                <div className=\"media-body\">\r\n                                    <h5 className=\"mt-0 mb-1\">{article.author?.username}</h5>\r\n                                    <small>{moment(article.createdAt).format('MMMM, Do YYYY')}</small>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-md-5\">\r\n                        {getFavIcon(article.favorited, article.favoritesCount, handleMarkAsFavClick, requesting)}\r\n                        {owner && (\r\n                            <>\r\n                                <button\r\n                                    className=\"btn btn-secondary rounded-pill text-white mr-1\"\r\n                                    onClick={handleEditClick}\r\n                                >\r\n                                    <svg\r\n                                        className=\"bi bi-pencil\"\r\n                                        width=\"1em\"\r\n                                        height=\"1em\"\r\n                                        viewBox=\"0 0 16 16\"\r\n                                        fill=\"currentColor\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    >\r\n                                        <path\r\n                                            fillRule=\"evenodd\"\r\n                                            d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"\r\n                                        />\r\n                                        <path\r\n                                            fillRule=\"evenodd\"\r\n                                            d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"\r\n                                        />\r\n                                    </svg>{' '}\r\n                                    Edit Article\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn btn-danger rounded-pill text-white\"\r\n                                    onClick={handleDeleteClick}\r\n                                    disabled={requesting}\r\n                                >\r\n                                    <svg\r\n                                        className=\"bi bi-trash\"\r\n                                        width=\"1em\"\r\n                                        height=\"1em\"\r\n                                        viewBox=\"0 0 16 16\"\r\n                                        fill=\"currentColor\"\r\n                                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    >\r\n                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                        <path\r\n                                            fillRule=\"evenodd\"\r\n                                            d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n                                        />\r\n                                    </svg>{' '}\r\n                                    Delete Article\r\n                                </button>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"bg-white text-dark mx-3 mb-3 px-2\">\r\n                <p>{article.body}</p>\r\n                <div>{renderTags(article.tagList)}</div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nArticle.propTypes = {\r\n    article: PropTypes.object.isRequired,\r\n    handleDeleteClick: PropTypes.func.isRequired,\r\n    handleEditClick: PropTypes.func.isRequired,\r\n    handleMarkAsFavClick: PropTypes.func.isRequired,\r\n    owner: PropTypes.bool.isRequired,\r\n    requesting: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Article;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\nfunction CommentList({ comments, authenticated, handleDeleteComment, currentUser }) {\r\n    const getlist = () => {\r\n        return comments.map((comment, index) => {\r\n            const showform = authenticated && comment.author.username === currentUser?.username;\r\n\r\n            return (\r\n                <li className=\"media border-light border-bottom p-1\" key={index}>\r\n                    <a href=\"#\" className=\"float-left mr-1\">\r\n                        <img src={comment.author.image} style={{ height: '50px' }} alt=\"\" className=\"rounded-circle\" />\r\n                    </a>\r\n                    <div className=\"media-body\">\r\n                        <span className=\"text-muted float-right\">\r\n                            <small className=\"text-muted\">\r\n                                {moment(comment.updatedAt).format('MMMM, Do YYYY, hh:mm a')}\r\n                            </small>\r\n                        </span>\r\n                        <strong className=\"text-success\">@{comment.author.username}</strong>\r\n                        <p>{comment.body}</p>\r\n                        {showform && (\r\n                            <span className=\"float-right hover-hand\" onClick={() => handleDeleteComment(comment)}>\r\n                                <svg\r\n                                    className=\"bi bi-trash-fill\"\r\n                                    width=\"1em\"\r\n                                    height=\"1em\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                    fill=\"currentColor\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <path\r\n                                        fillRule=\"evenodd\"\r\n                                        d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"\r\n                                    />\r\n                                </svg>\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                </li>\r\n            );\r\n        });\r\n    };\r\n\r\n    return <ul className=\"media-list\"> {getlist()}</ul>;\r\n}\r\n\r\nCommentList.propTypes = {\r\n    authenticated: PropTypes.bool.isRequired,\r\n    comments: PropTypes.array.isRequired,\r\n    currentUser: PropTypes.object.isRequired,\r\n    handleDeleteComment: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CommentList;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction CommentForm({ handleCommentSubmit, requesting }) {\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <textarea\r\n                className=\"form-control rounded-pill\"\r\n                value={text}\r\n                placeholder=\"write a comment...\"\r\n                rows=\"3\"\r\n                disabled={requesting}\r\n                onChange={(evt) => setText(evt.target.value)}\r\n            ></textarea>\r\n            <br />\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-info float-right rounded-pill\"\r\n                onClick={() => {\r\n                    handleCommentSubmit(text);\r\n                    setText('');\r\n                }}\r\n                disabled={requesting || text.length === 0}\r\n            >\r\n                Post\r\n            </button>\r\n        </>\r\n    );\r\n}\r\n\r\nCommentForm.propTypes = {\r\n    handleCommentSubmit: PropTypes.func.isRequired,\r\n    requesting: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Loader from '../../component/Loader';\r\nimport CommentList from '../../component/CommentList';\r\nimport CommentForm from '../../component/CommentForm';\r\nimport { getCommentsRequested, deleteCommentRequested, addCommentRequested } from './ducks';\r\n\r\nclass CommentContainer extends Component {\r\n    componentDidMount() {\r\n        const { slug, getCommentsRequested } = this.props;\r\n\r\n        getCommentsRequested(slug);\r\n    }\r\n\r\n    onDeleteComment = (comment) => {\r\n        const { deleteCommentRequested, slug } = this.props;\r\n\r\n        deleteCommentRequested({ comment, slug });\r\n    };\r\n\r\n    onCommentSubmit = (comment) => {\r\n        const { slug, addCommentRequested } = this.props;\r\n\r\n        addCommentRequested({ comment, slug });\r\n    };\r\n\r\n    render() {\r\n        const { loading, comments, requesting, authenticated, currentUser } = this.props;\r\n\r\n        if (loading) {\r\n            return (\r\n                <div className=\"mt-5\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-10 offset-md-1 col-sm-12\">\r\n                        <div className=\"comment-wrapper\">\r\n                            <div className=\"card card-info\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title text-center\">Comments</h5>\r\n                                    {!authenticated ? (\r\n                                        <p className=\"col-6 offset-4 mt-3\">\r\n                                            <Link to=\"/signin\">Sign in</Link> or <Link to=\"/signup\">sign up</Link> to\r\n                                            add comments on this article.\r\n                                        </p>\r\n                                    ) : (\r\n                                        <CommentForm\r\n                                            requesting={requesting}\r\n                                            handleCommentSubmit={this.onCommentSubmit}\r\n                                        />\r\n                                    )}\r\n\r\n                                    <div className=\"clearfix\"></div>\r\n                                    <hr />\r\n                                    <CommentList\r\n                                        comments={comments}\r\n                                        authenticated={authenticated}\r\n                                        currentUser={currentUser}\r\n                                        handleDeleteComment={this.onDeleteComment}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCommentContainer.propTypes = {\r\n    addCommentRequested: PropTypes.func.isRequired,\r\n    authenticated: PropTypes.bool.isRequired,\r\n    comments: PropTypes.array.isRequired,\r\n    currentUser: PropTypes.object.isRequired,\r\n    deleteCommentRequested: PropTypes.func.isRequired,\r\n    getCommentsRequested: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    requesting: PropTypes.bool.isRequired,\r\n    slug: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ commentReducer, applicationReducer }) => ({\r\n    authenticated: applicationReducer.authenticated,\r\n    currentUser: applicationReducer.currentUser,\r\n    comments: commentReducer.comments,\r\n    loading: commentReducer.loading,\r\n    requesting: commentReducer.requesting,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    getCommentsRequested,\r\n    deleteCommentRequested,\r\n    addCommentRequested,\r\n})(CommentContainer);\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Loader from '../../component/Loader';\r\nimport ErrorList from '../../component/ErrorList';\r\nimport Article from '../../component/Article';\r\nimport CommentContainer from '../Comment/CommentContainer';\r\n\r\nimport { reset, getArticleRequest, toggleFavoriteRequested, deleteRequested } from './ducks';\r\nimport historyService from '../../services/historyService';\r\n\r\nclass ArticleContainer extends Component {\r\n    owner = false;\r\n\r\n    onMarkAsFavClick = (favorited) => {\r\n        const {\r\n            match: {\r\n                params: { slug },\r\n            },\r\n            authenticated,\r\n            toggleFavoriteRequested,\r\n        } = this.props;\r\n\r\n        if (!authenticated) {\r\n            historyService.forwardTo(`/signin`);\r\n            return;\r\n        }\r\n\r\n        toggleFavoriteRequested({ slug, favorited });\r\n    };\r\n\r\n    onEditClick = () => {\r\n        const {\r\n            match: {\r\n                params: { slug },\r\n            },\r\n        } = this.props;\r\n\r\n        historyService.forwardTo(`/edit/article/${slug}`);\r\n    };\r\n\r\n    onDeleteClick = () => {\r\n        const {\r\n            match: {\r\n                params: { slug },\r\n            },\r\n            deleteRequested,\r\n        } = this.props;\r\n\r\n        deleteRequested(slug);\r\n    };\r\n\r\n    redirectToSign = () => {\r\n        historyService.forwardTo('/signin');\r\n    };\r\n\r\n    componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: { slug },\r\n            },\r\n            getArticleRequest,\r\n        } = this.props;\r\n\r\n        getArticleRequest(slug);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.reset();\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            match: {\r\n                params: { slug },\r\n            },\r\n            article,\r\n            error,\r\n            loading,\r\n            authenticated,\r\n            currentUser,\r\n            requesting,\r\n        } = this.props;\r\n\r\n        if (authenticated && article.author?.username === currentUser?.username) {\r\n            this.owner = true;\r\n        }\r\n\r\n        if (loading) {\r\n            return (\r\n                <div className=\"mt-5\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (Object.keys(error).length) {\r\n            return (\r\n                <div className=\"mt-5\">\r\n                    <ErrorList errors={error} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 border-bottom border-light\">\r\n                    <Article\r\n                        article={article}\r\n                        owner={this.owner}\r\n                        requesting={requesting}\r\n                        handleMarkAsFavClick={this.onMarkAsFavClick}\r\n                        handleEditClick={this.onEditClick}\r\n                        handleDeleteClick={this.onDeleteClick}\r\n                    />\r\n                </div>\r\n                <hr />\r\n                <div className=\"col-md-12 mt-3\">\r\n                    <CommentContainer slug={slug} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nArticleContainer.propTypes = {\r\n    article: PropTypes.object.isRequired,\r\n    authenticated: PropTypes.bool.isRequired,\r\n    currentUser: PropTypes.object.isRequired,\r\n    deleteRequested: PropTypes.func.isRequired,\r\n    error: PropTypes.object.isRequired,\r\n    getArticleRequest: PropTypes.func.isRequired,\r\n    loading: PropTypes.bool.isRequired,\r\n    requesting: PropTypes.bool.isRequired,\r\n    reset: PropTypes.func.isRequired,\r\n    toggleFavoriteRequested: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ articleReducer, applicationReducer }) => ({\r\n    authenticated: applicationReducer.authenticated,\r\n    currentUser: applicationReducer.currentUser,\r\n    article: articleReducer.article,\r\n    error: articleReducer.error,\r\n    loading: articleReducer.loading,\r\n    requesting: articleReducer.requesting,\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, { reset, getArticleRequest, toggleFavoriteRequested, deleteRequested })\r\n)(ArticleContainer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport AuthService from './services/authService';\r\n\r\nimport NotFound from './component/NotFound';\r\nimport SignUpContainer from './container/SignUp/SignUpContainer';\r\nimport SignInContainer from './container/SignIn/SignInContainer';\r\nimport ArticleListContainer from './container/ArticleList/ArticleListContainer';\r\nimport CreateArticleContainer from './container/Article/CreateArticleContainer';\r\nimport EditArticleContainer from './container/Article/EditArticleContainer';\r\nimport ArticleContainer from './container/Article/ArticleContainer';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                AuthService.getLoggedInUser() !== null ? <Component {...props} /> : <Redirect to=\"/signin\" />\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n    component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={(props) => (AuthService.getLoggedInUser() === null ? <Component {...props} /> : <Redirect to=\"/\" />)}\r\n    />\r\n);\r\n\r\nPublicRoute.propTypes = {\r\n    component: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Routes() {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path={['/', '/articles']} exact>\r\n                    <ArticleListContainer />\r\n                </Route>\r\n                <ProtectedRoute path=\"/new/article\" exact component={CreateArticleContainer} />\r\n                <ProtectedRoute path=\"/edit/article/:slug\" component={EditArticleContainer} />\r\n                <Route path=\"/article/:slug\">\r\n                    <ArticleContainer />\r\n                </Route>\r\n                <PublicRoute path=\"/signin\" component={SignInContainer} />\r\n                <PublicRoute path=\"/signup\" component={SignUpContainer} />\r\n                <Route path=\"*\">\r\n                    <NotFound />\r\n                </Route>\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nfunction Nav({ isAuthenticated, signOutRequested }) {\n    return (\n        <nav className=\"navbar navbar-expand navbar-dark bg-info\">\n            <NavLink className=\"nav-link text-white\" to=\"/\" exact strict>\n                Articles Demo Application\n            </NavLink>\n            <button\n                className=\"navbar-toggler\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#navbarsExample02\"\n                aria-controls=\"navbarsExample02\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n            >\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarsExample02\">\n                <ul className=\"navbar-nav ml-auto text-white\">\n                    {isAuthenticated ? (\n                        <>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to=\"/new/article\">\n                                    Create New Article{' '}\n                                </NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <span href=\"#\" className=\"nav-link\" onClick={signOutRequested}>\n                                    Sign Out{' '}\n                                </span>\n                            </li>\n                        </>\n                    ) : (\n                        <>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to=\"/signin\">\n                                    Sign In{' '}\n                                </NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" to=\"/signup\">\n                                    Sign Up\n                                </NavLink>\n                            </li>\n                        </>\n                    )}\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nNav.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    signOutRequested: PropTypes.func.isRequired,\n};\n\nexport default Nav;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Nav from '../../component/Nav';\r\nimport { signOutRequested } from '../../ducks';\r\n\r\nclass NavContainer extends Component {\r\n    render() {\r\n        const { authenticated, signOutRequested } = this.props;\r\n\r\n        return <Nav isAuthenticated={authenticated} signOutRequested={signOutRequested} />;\r\n    }\r\n}\r\n\r\nNavContainer.propTypes = {\r\n    authenticated: PropTypes.bool.isRequired,\r\n    signOutRequested: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ applicationReducer }) => ({\r\n    authenticated: applicationReducer.authenticated,\r\n});\r\n\r\nexport default connect(mapStateToProps, { signOutRequested })(NavContainer);\r\n","import React from 'react';\r\n\r\nimport Routes from './Routes';\r\nimport NavContainer from './container/Nav/NavContainer';\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <NavContainer />\r\n\r\n            <Routes />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Provider } from 'react-redux';\r\nimport { ConnectedRouter as Router } from 'connected-react-router';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { store } from './store';\r\nimport historyService from './services/historyService';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router history={historyService.history}>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}